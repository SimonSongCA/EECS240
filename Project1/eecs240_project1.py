# -*- coding: utf-8 -*-
"""EECS240_Project1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UWM7J3QxZFXFfZeZDFI5WsEQwbJLMJoB
"""

from scipy.stats import bernoulli 
from scipy.stats import norm 
import matplotlib.pyplot as plt 
import numpy as np
# Number of Trials
Sample_Times = 200000
# Probability of each of the trials
p = 0.3
# # of the experiment in each of the trials
N = 100
Sum_Ber = np.zeros(Sample_Times)
for i in range(Sample_Times):
  Sum_Ber[i] = bernoulli.rvs(p, size=N).sum()
# Normalize the graph
plt.hist(Sum_Ber, bins=40,density=True)
# Plot the graph
x = np.arange(0, N, 0.1)
y = norm.pdf(x, N*p, (N*p*(1-p))**0.5) 
plt.plot(x, y)
plt.xlabel('Sum of Trials') 
plt.ylabel('Probability of each of the trials')
plt.show()

import matplotlib.pyplot as plt 
import numpy as np
from scipy.stats import poisson 
from scipy.stats import norm 
Sample_Times = 10000
位 = 0.3
N = 100
Sum_Poisson = np.zeros(Sample_Times)
# Display PMF of the sum
for i in range(Sample_Times):
  Sum_Poisson[i] = poisson.rvs(位, size=N).sum()
plt.hist(Sum_Poisson, bins=20, density=True)
# Display PDF of Gaussian RV
x = np.arange(0, N, 0.1)
y = norm.pdf(x, N*位, (N*位)**0.5) 
plt.plot(x, y) 
plt.xlabel('Sum of Trials') 
plt.ylabel('Probability') 
plt.show()

from scipy.stats import norm 
import matplotlib.pyplot as plt 
import numpy as np

# mean & variance
mean = 2 
var = 3
x = np.random.rand(1, 200)
y = norm.ppf(x, mean, np.sqrt(var)) 
# plot the graph with labels
plt.plot(y, x, 'x') 
plt.ylabel('Probability') 
plt.xlabel('Value of Gaussian RV') 
plt.show()

from scipy.stats import bernoulli 
from scipy.stats import binom 
import matplotlib.pyplot as plt
# Parameters
n_binom = 6 
p_binom = 0.3 
p_bernoulli = 0.4 
N = 10000
# Situation of Binomial
Sample_Mean_Binomial = [] 
for i in range(1,N):
  Sample_Mean_Binomial.append(sum(binom.rvs(n_binom, p_binom, size=i))/i)
# Make a subplot with 1 row 2 cols
plt.subplot(121) 
plt.plot(Sample_Mean_Binomial) 
plt.title('Binomial') 
plt.xlabel('Number of Sequences') 
plt.ylabel('Sample Mean of Binomial')
# Situation of Bernoulli
Sample_Mean_Bernoulli = [] 
for i in range(1, N):
  Sample_Mean_Bernoulli.append(sum(bernoulli.rvs(p_bernoulli, size=i))/i)
plt.subplot(122) 
plt.plot(Sample_Mean_Bernoulli) 
plt.title('Bernoulli')
plt.xlabel('Number of Sequences') 
plt.ylabel('Sample Mean of Bernoulli')
plt.show()

from scipy.stats import norm 
import matplotlib.pyplot as plt 
import numpy as np
mean = 0
var = 1
N = 5000
Y = np.zeros(N) 
VR_Y_Mean = []
for i in range(1, N):
  X = norm.rvs(mean, var, size=N) 
  for j in range(N):
    Y[j] = X[j]*X[j] 
  Y_Mean = np.mean(Y)
  VR_Y_Mean.append(Y_Mean)
x = np.arange(1, N, 1) 
axes = plt.gca() 
plt.plot(x, VR_Y_Mean) 
plt.xlabel('Times') 
plt.ylabel('VR_Y_Mean') 
plt.show()